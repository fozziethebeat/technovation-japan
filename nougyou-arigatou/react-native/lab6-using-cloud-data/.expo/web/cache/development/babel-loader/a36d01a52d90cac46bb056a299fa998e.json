{"ast":null,"code":"import { configureStore } from '@reduxjs/toolkit';\nimport Airtable from 'airtable';\nimport commentReducer from \"./commentSlice\";\nimport farmerReducer from \"./farmerSlice\";\nimport { init as farmerInit } from \"./farmerSlice\";\nvar preloadedState = {\n  farmer: [],\n  comment: [{\n    Username: 'yusano',\n    Content: 'Best potatoes Ever',\n    key: '001'\n  }, {\n    Username: 'yuichinabe',\n    Content: 'Let me pick berries',\n    key: '002'\n  }, {\n    Username: 'yuichinabe',\n    Content: 'Tells great jokes',\n    key: '003'\n  }]\n};\nvar store = configureStore({\n  reducer: {\n    farmer: farmerReducer,\n    comment: commentReducer\n  },\n  preloadedState: preloadedState\n});\nvar farmerBase = new Airtable({\n  apiKey: process && process.env && process.env.AIRTABLE_API_KEY || \"keyOIGxfs3sOz7peI\"\n}).base('appwPdl5QXUtRh8Rz');\nfarmerBase('Table 1').select({}).eachPage(function page(records, fetchNextPage) {\n  records.map(function (r) {\n    console.log(r.get('Image'));\n    return {\n      Name: r.get('Name'),\n      Image: {\n        uri: r.get('Image')[0].url\n      },\n      Username: r.get('Username'),\n      Location: r.get('Location'),\n      Favorites: r.get('Favorites').split(',').map(function (f) {\n        return f.trim();\n      })\n    };\n  }).forEach(function (r) {\n    return store.dispatch(farmerInit(r));\n  });\n  fetchNextPage();\n}, function done(err) {\n  console.log(err);\n});\nexport default store;","map":{"version":3,"sources":["/Users/fozziethebeat/devel/technovation-japan/nougyou-arigatou/react-native/final-version/Store.tsx"],"names":["configureStore","Airtable","commentReducer","farmerReducer","init","farmerInit","preloadedState","farmer","comment","Username","Content","key","store","reducer","farmerBase","apiKey","base","select","eachPage","page","records","fetchNextPage","map","r","console","log","get","Name","Image","uri","url","Location","Favorites","split","f","trim","forEach","dispatch","done","err"],"mappings":"AAAA,SAASA,cAAT,QAA+B,kBAA/B;AACA,OAAOC,QAAP,MAAqB,UAArB;AAGA,OAAOC,cAAP;AACA,OAAOC,aAAP;AACA,SAASC,IAAI,IAAIC,UAAjB;AAEA,IAAMC,cAAc,GAAG;AACrBC,EAAAA,MAAM,EAAE,EADa;AAErBC,EAAAA,OAAO,EAAE,CACP;AAACC,IAAAA,QAAQ,EAAE,QAAX;AAAqBC,IAAAA,OAAO,EAAE,oBAA9B;AAAoDC,IAAAA,GAAG,EAAE;AAAzD,GADO,EAEP;AAACF,IAAAA,QAAQ,EAAE,YAAX;AAAyBC,IAAAA,OAAO,EAAE,qBAAlC;AAAyDC,IAAAA,GAAG,EAAE;AAA9D,GAFO,EAGP;AAACF,IAAAA,QAAQ,EAAE,YAAX;AAAyBC,IAAAA,OAAO,EAAE,mBAAlC;AAAuDC,IAAAA,GAAG,EAAE;AAA5D,GAHO;AAFY,CAAvB;AASA,IAAMC,KAAK,GAAGZ,cAAc,CAAC;AAC3Ba,EAAAA,OAAO,EAAE;AACPN,IAAAA,MAAM,EAAEJ,aADD;AAEPK,IAAAA,OAAO,EAAEN;AAFF,GADkB;AAK3BI,EAAAA,cAAc,EAAdA;AAL2B,CAAD,CAA5B;AASA,IAAMQ,UAAU,GAAG,IAAIb,QAAJ,CAAa;AAACc,EAAAA,MAAM;AAAP,CAAb,EAChBC,IADgB,CACX,mBADW,CAAnB;AAEAF,UAAU,CAAC,SAAD,CAAV,CAAsBG,MAAtB,CAA6B,EAA7B,EAAiCC,QAAjC,CACE,SAASC,IAAT,CAAcC,OAAd,EAAuBC,aAAvB,EAAsC;AACpCD,EAAAA,OAAO,CAACE,GAAR,CAAY,UAAAC,CAAC,EAAI;AACfC,IAAAA,OAAO,CAACC,GAAR,CAAYF,CAAC,CAACG,GAAF,CAAM,OAAN,CAAZ;AACA,WAAO;AACPC,MAAAA,IAAI,EAAEJ,CAAC,CAACG,GAAF,CAAM,MAAN,CADC;AAEPE,MAAAA,KAAK,EAAE;AAACC,QAAAA,GAAG,EAAEN,CAAC,CAACG,GAAF,CAAM,OAAN,EAAe,CAAf,EAAkBI;AAAxB,OAFA;AAGPrB,MAAAA,QAAQ,EAAEc,CAAC,CAACG,GAAF,CAAM,UAAN,CAHH;AAIPK,MAAAA,QAAQ,EAAER,CAAC,CAACG,GAAF,CAAM,UAAN,CAJH;AAKPM,MAAAA,SAAS,EAAET,CAAC,CAACG,GAAF,CAAM,WAAN,EAAmBO,KAAnB,CAAyB,GAAzB,EAA8BX,GAA9B,CAAkC,UAAAY,CAAC;AAAA,eAAIA,CAAC,CAACC,IAAF,EAAJ;AAAA,OAAnC;AALJ,KAAP;AAOD,GATD,EAUGC,OAVH,CAUW,UAAAb,CAAC;AAAA,WAAIX,KAAK,CAACyB,QAAN,CAAehC,UAAU,CAACkB,CAAD,CAAzB,CAAJ;AAAA,GAVZ;AAWAF,EAAAA,aAAa;AACd,CAdH,EAeE,SAASiB,IAAT,CAAcC,GAAd,EAAmB;AACjBf,EAAAA,OAAO,CAACC,GAAR,CAAYc,GAAZ;AACD,CAjBH;AAoBA,eAAe3B,KAAf","sourcesContent":["import { configureStore } from '@reduxjs/toolkit'\nimport Airtable from 'airtable';\n\nimport Images from './assets/Images';\nimport commentReducer from './commentSlice';\nimport farmerReducer from './farmerSlice';\nimport { init as farmerInit } from './farmerSlice';\n\nconst preloadedState = {\n  farmer: [],\n  comment: [\n    {Username: 'yusano', Content: 'Best potatoes Ever', key: '001'},\n    {Username: 'yuichinabe', Content: 'Let me pick berries', key: '002'},\n    {Username: 'yuichinabe', Content: 'Tells great jokes', key: '003'},\n  ]\n};\n\nconst store = configureStore({\n  reducer: {\n    farmer: farmerReducer,\n    comment: commentReducer,\n  },\n  preloadedState\n});\n\n// Read the initial set of farmers from Airtable.\nconst farmerBase = new Airtable({apiKey : process.env.AIRTABLE_API_KEY})\n  .base('appwPdl5QXUtRh8Rz');\nfarmerBase('Table 1').select({}).eachPage(\n  function page(records, fetchNextPage) {\n    records.map(r => {\n      console.log(r.get('Image'));\n      return {\n      Name: r.get('Name'),\n      Image: {uri: r.get('Image')[0].url},\n      Username: r.get('Username'),\n      Location: r.get('Location'),\n      Favorites: r.get('Favorites').split(',').map(f => f.trim()),\n    };\n    })\n      .forEach(r => store.dispatch(farmerInit(r)));\n    fetchNextPage();\n  },\n  function done(err) {\n    console.log(err);\n  });\n  \n\nexport default store;\nexport type RootState = ReturnType<typeof store.getState>;\nexport type AppDispatch = typeof store.dispatch;\n"]},"metadata":{},"sourceType":"module"}