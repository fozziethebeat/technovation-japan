{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { createSlice } from '@reduxjs/toolkit';\nvar initialState = [];\nexport var farmerSlice = createSlice({\n  name: 'farmer',\n  initialState: initialState,\n  reducers: {\n    append: function append(state, farmer) {\n      state.push(farmer.payload);\n    },\n    update: function update(state, username, farmer) {\n      for (var i = 0; i < state.length; ++i) {\n        if (state[i].Username == username) {\n          state[i] = _objectSpread(_objectSpread({}, farmer), state[i]);\n        }\n      }\n    }\n  }\n});\nvar _farmerSlice$actions = farmerSlice.actions,\n    append = _farmerSlice$actions.append,\n    update = _farmerSlice$actions.update;\nexport { append, update };\nexport default farmerSlice.reducer;","map":{"version":3,"sources":["/Users/fozziethebeat/devel/technovation-japan/nougyou-arigatou/react-native/final-version/farmerSlice.ts"],"names":["createSlice","initialState","farmerSlice","name","reducers","append","state","farmer","push","payload","update","username","i","length","Username","actions","reducer"],"mappings":";;;;;;AAAA,SAASA,WAAT,QAA2C,kBAA3C;AAKA,IAAMC,YAA2B,GAAG,EAApC;AAEA,OAAO,IAAMC,WAAW,GAAGF,WAAW,CAAC;AACrCG,EAAAA,IAAI,EAAE,QAD+B;AAErCF,EAAAA,YAAY,EAAZA,YAFqC;AAGrCG,EAAAA,QAAQ,EAAE;AACRC,IAAAA,MAAM,EAAE,gBAACC,KAAD,EAAQC,MAAR,EAAmB;AACzBD,MAAAA,KAAK,CAACE,IAAN,CAAWD,MAAM,CAACE,OAAlB;AACD,KAHO;AAIRC,IAAAA,MAAM,EAAE,gBAACJ,KAAD,EAAQK,QAAR,EAAkBJ,MAAlB,EAA6B;AACnC,WAAK,IAAIK,CAAC,GAAE,CAAZ,EAAeA,CAAC,GAAGN,KAAK,CAACO,MAAzB,EAAiC,EAAED,CAAnC,EAAsC;AACpC,YAAIN,KAAK,CAACM,CAAD,CAAL,CAASE,QAAT,IAAqBH,QAAzB,EAAmC;AACjCL,UAAAA,KAAK,CAACM,CAAD,CAAL,mCACKL,MADL,GAEKD,KAAK,CAACM,CAAD,CAFV;AAID;AACF;AACF;AAbO;AAH2B,CAAD,CAA/B;AAoBA,2BAA2BV,WAAW,CAACa,OAAvC;AAAA,IAAQV,MAAR,wBAAQA,MAAR;AAAA,IAAgBK,MAAhB,wBAAgBA,MAAhB;;AAEP,eAAeR,WAAW,CAACc,OAA3B","sourcesContent":["import { createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport type { RootState } from '../../app/store'\n\nimport type { Farmer } from './types';\n\nconst initialState: Array<Farmer> = [];\n\nexport const farmerSlice = createSlice({\n  name: 'farmer',\n  initialState,\n  reducers: {\n    append: (state, farmer) => {\n      state.push(farmer.payload);\n    },\n    update: (state, username, farmer) => {\n      for (var i =0; i < state.length; ++i) {\n        if (state[i].Username == username) {\n          state[i] = {\n            ...farmer,\n            ...state[i],\n          }\n        }\n      }\n    },\n  },\n});\n\nexport const { append, update } = farmerSlice.actions;\n\nexport default farmerSlice.reducer;\n"]},"metadata":{},"sourceType":"module"}