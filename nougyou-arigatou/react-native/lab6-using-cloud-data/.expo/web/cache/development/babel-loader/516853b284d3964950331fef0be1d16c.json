{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = Navigation;\n\nvar _native = require(\"@react-navigation/native\");\n\nvar _nativeStack = require(\"@react-navigation/native-stack\");\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _InitialScreen = _interopRequireDefault(require(\"../screens/InitialScreen\"));\n\nvar _LoginScreen = _interopRequireDefault(require(\"../screens/LoginScreen\"));\n\nvar _NewFarmerScreen = _interopRequireDefault(require(\"../screens/NewFarmerScreen\"));\n\nvar _NotFoundScreen = _interopRequireDefault(require(\"../screens/NotFoundScreen\"));\n\nvar _ProfileScreen = _interopRequireDefault(require(\"../screens/ProfileScreen\"));\n\nvar _FarmerProfileScreen = _interopRequireDefault(require(\"../screens/FarmerProfileScreen\"));\n\nvar _FarmerListScreen = _interopRequireDefault(require(\"../screens/FarmerListScreen\"));\n\nvar _LinkingConfiguration = _interopRequireDefault(require(\"./LinkingConfiguration\"));\n\nvar _jsxFileName = \"/Users/fozziethebeat/devel/technovation-japan/nougyou-arigatou/react-native/final-version/navigation/index.tsx\";\n\nfunction _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\nfunction _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nvar FarmerTheme = {\n  dark: false,\n  colors: {\n    primary: 'rgb(76, 168, 186)',\n    background: 'rgb(255, 255, 255)',\n    card: 'rgb(122, 168, 76)',\n    text: 'rgb(255, 255, 255)',\n    border: 'rgb(76, 186, 94)'\n  }\n};\n\nfunction Navigation(_ref) {\n  var colorScheme = _ref.colorScheme;\n  return React.createElement(_native.NavigationContainer, {\n    linking: _LinkingConfiguration.default,\n    theme: FarmerTheme,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 5\n    }\n  }, React.createElement(RootNavigator, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }\n  }));\n}\n\nvar Stack = (0, _nativeStack.createNativeStackNavigator)();\n\nfunction RootNavigator() {\n  return React.createElement(Stack.Navigator, {\n    screenOptions: {\n      headerTitleAlign: 'center'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 5\n    }\n  }, React.createElement(Stack.Screen, {\n    name: \"Initial\",\n    component: _InitialScreen.default,\n    options: {\n      headerShown: true,\n      title: 'Who Are You?'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }\n  }), React.createElement(Stack.Screen, {\n    name: \"Login\",\n    component: _LoginScreen.default,\n    options: {\n      headerShown: true,\n      title: 'Login'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }\n  }), React.createElement(Stack.Screen, {\n    name: \"New Farmer\",\n    component: _NewFarmerScreen.default,\n    options: {\n      headerShown: true,\n      title: 'Signup'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }\n  }), React.createElement(Stack.Screen, {\n    name: \"Root\",\n    component: _FarmerListScreen.default,\n    options: {\n      headerShown: true,\n      title: 'Farmers'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }\n  }), React.createElement(Stack.Screen, {\n    name: \"NotFound\",\n    component: _NotFoundScreen.default,\n    options: {\n      title: 'Oops!'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }\n  }), React.createElement(Stack.Screen, {\n    name: \"Farmer Profile\",\n    component: _FarmerProfileScreen.default,\n    options: function options(_ref2) {\n      var route = _ref2.route;\n      return {\n        headerShown: true,\n        title: route.params.name\n      };\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }\n  }), React.createElement(Stack.Screen, {\n    name: \"Profile\",\n    component: _ProfileScreen.default,\n    options: function options(_ref3) {\n      var route = _ref3.route;\n      return {\n        headerShown: true,\n        title: route.params.name\n      };\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }\n  }));\n}","map":{"version":3,"sources":["/Users/fozziethebeat/devel/technovation-japan/nougyou-arigatou/react-native/final-version/navigation/index.tsx"],"names":["FarmerTheme","dark","colors","primary","background","card","text","border","Navigation","colorScheme","LinkingConfiguration","Stack","RootNavigator","headerTitleAlign","InitialScreen","headerShown","title","LoginScreen","NewFarmerScreen","FarmerListScreen","NotFoundScreen","FarmerProfileScreen","route","params","name","ProfileScreen"],"mappings":"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","sourcesContent":["/**\n * If you are not familiar with React Navigation, refer to the \"Fundamentals\" guide:\n * https://reactnavigation.org/docs/getting-started\n *\n */\nimport { NavigationContainer, DefaultTheme, DarkTheme } from '@react-navigation/native';\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport * as React from 'react';\nimport { ColorSchemeName } from 'react-native';\n\nimport InitialScreen from '../screens/InitialScreen';\nimport LoginScreen from '../screens/LoginScreen';\nimport NewFarmerScreen from '../screens/NewFarmerScreen';\nimport NotFoundScreen from '../screens/NotFoundScreen';\nimport ProfileScreen from '../screens/ProfileScreen';\nimport FarmerProfileScreen from '../screens/FarmerProfileScreen';\nimport FarmerListScreen from '../screens/FarmerListScreen';\nimport { RootStackParamList, RootTabParamList, RootTabScreenProps } from '../types';\nimport LinkingConfiguration from './LinkingConfiguration';\n\nconst FarmerTheme = {\n  dark: false,\n  colors: {\n    primary: 'rgb(76, 168, 186)',\n    background: 'rgb(255, 255, 255)',\n    card: 'rgb(122, 168, 76)',\n    text: 'rgb(255, 255, 255)',\n    border: 'rgb(76, 186, 94)',\n  },\n};\n\nexport default function Navigation({ colorScheme }: { colorScheme: ColorSchemeName }) {\n  return (\n    <NavigationContainer\n      linking={LinkingConfiguration}\n      theme={FarmerTheme}>\n      <RootNavigator />\n    </NavigationContainer>\n  );\n}\n\n/**\n * A root stack navigator is often used for displaying modals on top of all other content.\n * https://reactnavigation.org/docs/modal\n */\nconst Stack = createNativeStackNavigator<RootStackParamList>();\n\nfunction RootNavigator() {\n  return (\n    <Stack.Navigator screenOptions={{headerTitleAlign: 'center'}}>\n      <Stack.Screen\n        name=\"Initial\"\n        component={InitialScreen}\n        options={{ headerShown: true, title: 'Who Are You?' }} />\n      <Stack.Screen\n        name=\"Login\"\n        component={LoginScreen}\n        options={{ headerShown: true, title: 'Login' }} />\n      <Stack.Screen\n        name=\"New Farmer\"\n        component={NewFarmerScreen}\n        options={{ headerShown: true, title: 'Signup' }} />\n      <Stack.Screen\n        name=\"Root\"\n        component={FarmerListScreen}\n        options={{ headerShown: true, title: 'Farmers' }} />\n      <Stack.Screen\n        name=\"NotFound\"\n        component={NotFoundScreen}\n        options={{ title: 'Oops!' }} />\n      <Stack.Screen\n        name=\"Farmer Profile\"\n        component={FarmerProfileScreen}\n        options={ ({ route }) => ({ headerShown: true, title: route.params.name }) } />\n      <Stack.Screen\n        name=\"Profile\"\n        component={ProfileScreen}\n        options={ ({ route }) => ({ headerShown: true, title: route.params.name }) } />\n    </Stack.Navigator>\n  );\n}\n"]},"metadata":{},"sourceType":"script"}