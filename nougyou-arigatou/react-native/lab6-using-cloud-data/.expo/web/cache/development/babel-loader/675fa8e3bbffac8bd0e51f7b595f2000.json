{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { NavigationContainer, DefaultTheme, DarkTheme } from '@react-navigation/native';\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport * as React from 'react';\nimport NotFoundScreen from \"../screens/NotFoundScreen\";\nimport ProfileScreen from \"../screens/ProfileScreen\";\nimport FarmerListScreen from \"../screens/FarmerListScreen\";\nimport LinkingConfiguration from \"./LinkingConfiguration\";\n\nvar FarmerTheme = _objectSpread(_objectSpread({}, DefaultTheme), {}, {\n  colors: _objectSpread(_objectSpread({}, DefaultTheme.colors), {}, {\n    primary: 'rbg(255, 45, 85)',\n    background: 'rgb(76, 186, 94)'\n  })\n});\n\nexport default function Navigation(_ref) {\n  var colorScheme = _ref.colorScheme;\n  return React.createElement(NavigationContainer, {\n    linking: LinkingConfiguration,\n    theme: DarkTheme\n  }, React.createElement(RootNavigator, null));\n}\nvar Stack = createNativeStackNavigator();\n\nfunction RootNavigator() {\n  return React.createElement(Stack.Navigator, null, React.createElement(Stack.Screen, {\n    name: \"Root\",\n    component: FarmerListScreen,\n    options: {\n      headerShown: true,\n      title: 'Farmers'\n    }\n  }), React.createElement(Stack.Screen, {\n    name: \"NotFound\",\n    component: NotFoundScreen,\n    options: {\n      title: 'Oops!'\n    }\n  }), React.createElement(Stack.Screen, {\n    name: \"Profile\",\n    component: ProfileScreen,\n    options: function options(_ref2) {\n      var route = _ref2.route;\n      return {\n        headerShown: true,\n        title: route.params.name\n      };\n    }\n  }));\n}","map":{"version":3,"sources":["/Users/fozziethebeat/devel/technovation-japan/nougyou-arigatou/react-native/final-version/navigation/index.tsx"],"names":["NavigationContainer","DefaultTheme","DarkTheme","createNativeStackNavigator","React","NotFoundScreen","ProfileScreen","FarmerListScreen","LinkingConfiguration","FarmerTheme","colors","primary","background","Navigation","colorScheme","Stack","RootNavigator","headerShown","title","route","params","name"],"mappings":";;;;;;AAKA,SAASA,mBAAT,EAA8BC,YAA9B,EAA4CC,SAA5C,QAA6D,0BAA7D;AACA,SAASC,0BAAT,QAA2C,gCAA3C;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;AAGA,OAAOC,cAAP;AACA,OAAOC,aAAP;AACA,OAAOC,gBAAP;AAEA,OAAOC,oBAAP;;AAEA,IAAMC,WAAW,mCACZR,YADY;AAEfS,EAAAA,MAAM,kCACDT,YAAY,CAACS,MADZ;AAEJC,IAAAA,OAAO,EAAE,kBAFL;AAGJC,IAAAA,UAAU,EAAE;AAHR;AAFS,EAAjB;;AASA,eAAe,SAASC,UAAT,OAAuE;AAAA,MAAjDC,WAAiD,QAAjDA,WAAiD;AACpF,SACE,oBAAC,mBAAD;AACE,IAAA,OAAO,EAAEN,oBADX;AAEE,IAAA,KAAK,EAAEN;AAFT,KAGE,oBAAC,aAAD,OAHF,CADF;AAOD;AAMD,IAAMa,KAAK,GAAGZ,0BAA0B,EAAxC;;AAEA,SAASa,aAAT,GAAyB;AACvB,SACE,oBAAC,KAAD,CAAO,SAAP,QACE,oBAAC,KAAD,CAAO,MAAP;AACE,IAAA,IAAI,EAAC,MADP;AAEE,IAAA,SAAS,EAAET,gBAFb;AAGE,IAAA,OAAO,EAAE;AAAEU,MAAAA,WAAW,EAAE,IAAf;AAAqBC,MAAAA,KAAK,EAAE;AAA5B;AAHX,IADF,EAKE,oBAAC,KAAD,CAAO,MAAP;AACE,IAAA,IAAI,EAAC,UADP;AAEE,IAAA,SAAS,EAAEb,cAFb;AAGE,IAAA,OAAO,EAAE;AAAEa,MAAAA,KAAK,EAAE;AAAT;AAHX,IALF,EASE,oBAAC,KAAD,CAAO,MAAP;AACE,IAAA,IAAI,EAAC,SADP;AAEE,IAAA,SAAS,EAAEZ,aAFb;AAGE,IAAA,OAAO,EAAG;AAAA,UAAGa,KAAH,SAAGA,KAAH;AAAA,aAAgB;AAAEF,QAAAA,WAAW,EAAE,IAAf;AAAqBC,QAAAA,KAAK,EAAEC,KAAK,CAACC,MAAN,CAAaC;AAAzC,OAAhB;AAAA;AAHZ,IATF,CADF;AAgBD","sourcesContent":["/**\n * If you are not familiar with React Navigation, refer to the \"Fundamentals\" guide:\n * https://reactnavigation.org/docs/getting-started\n *\n */\nimport { NavigationContainer, DefaultTheme, DarkTheme } from '@react-navigation/native';\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport * as React from 'react';\nimport { ColorSchemeName } from 'react-native';\n\nimport NotFoundScreen from '../screens/NotFoundScreen';\nimport ProfileScreen from '../screens/ProfileScreen';\nimport FarmerListScreen from '../screens/FarmerListScreen';\nimport { RootStackParamList, RootTabParamList, RootTabScreenProps } from '../types';\nimport LinkingConfiguration from './LinkingConfiguration';\n\nconst FarmerTheme = {\n  ...DefaultTheme,\n  colors: {\n    ...DefaultTheme.colors,\n    primary: 'rbg(255, 45, 85)',\n    background: 'rgb(76, 186, 94)',\n  },\n};\n\nexport default function Navigation({ colorScheme }: { colorScheme: ColorSchemeName }) {\n  return (\n    <NavigationContainer\n      linking={LinkingConfiguration}\n      theme={DarkTheme}>\n      <RootNavigator />\n    </NavigationContainer>\n  );\n}\n\n/**\n * A root stack navigator is often used for displaying modals on top of all other content.\n * https://reactnavigation.org/docs/modal\n */\nconst Stack = createNativeStackNavigator<RootStackParamList>();\n\nfunction RootNavigator() {\n  return (\n    <Stack.Navigator>\n      <Stack.Screen\n        name=\"Root\"\n        component={FarmerListScreen}\n        options={{ headerShown: true, title: 'Farmers' }} />\n      <Stack.Screen\n        name=\"NotFound\"\n        component={NotFoundScreen}\n        options={{ title: 'Oops!' }} />\n      <Stack.Screen\n        name=\"Profile\"\n        component={ProfileScreen}\n        options={ ({ route }) => ({ headerShown: true, title: route.params.name }) } />\n    </Stack.Navigator>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}