{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport Airtable from 'airtable';\nimport { createSlice } from '@reduxjs/toolkit';\nimport Images from \"./assets/Images\";\nvar initialState1 = [];\nvar base = new Airtable({\n  apiKey: process && process.env && process.env.AIRTABLE_API_KEY || \"keyOIGxfs3sOz7peI\"\n}).base('appwPdl5QXUtRh8Rz');\nbase('Table 1').select({}).eachPage(function page(records, fetchNextPage) {\n  return _regeneratorRuntime.async(function page$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          records.map(function (record) {\n            return {\n              Name: record.get('Name'),\n              Image: '',\n              Username: record.get('Username'),\n              Location: record.get('Location'),\n              Favorites: record.get('Favorites').split(',')\n            };\n          }).forEach(function (m) {\n            return initialState1.push(m);\n          });\n          fetchNextPage();\n\n        case 2:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, Promise);\n}, function done(err) {\n  return _regeneratorRuntime.async(function done$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          console.log(err);\n          console.log(initialState1);\n\n        case 2:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, null, null, null, Promise);\n});\nvar initialState = [{\n  Name: 'Yuki Sano',\n  Image: Images.Farmer1,\n  Username: 'yusano',\n  Location: 'Nagano',\n  Favorites: ['cabbage', 'spinach']\n}, {\n  Name: 'Yuichiro Watanabe',\n  Image: Images.Farmer2,\n  Username: 'yuichinabe',\n  Location: 'Niigata',\n  Favorites: ['rice', 'pumpkin']\n}, {\n  Name: 'Megumi Yamada',\n  Image: Images.Farmer3,\n  Username: 'watermelon',\n  Location: 'Yamagata',\n  Favorites: ['garlic', 'onion']\n}];\nexport var farmerSlice = createSlice({\n  name: 'farmer',\n  initialState: initialState,\n  reducers: {\n    append: function append(state, farmer) {\n      console.log(farmer);\n      state.push(farmer.payload);\n    },\n    update: function update(state, username, farmer) {\n      for (var i = 0; i < state.length; ++i) {\n        if (state[i].Username == username) {\n          state[i] = _objectSpread(_objectSpread({}, farmer), state[i]);\n        }\n      }\n    }\n  }\n});\nvar _farmerSlice$actions = farmerSlice.actions,\n    append = _farmerSlice$actions.append,\n    update = _farmerSlice$actions.update;\nexport { append, update };\nexport default farmerSlice.reducer;","map":{"version":3,"sources":["/Users/fozziethebeat/devel/technovation-japan/nougyou-arigatou/react-native/final-version/farmerSlice.ts"],"names":["Airtable","createSlice","Images","initialState1","base","apiKey","select","eachPage","page","records","fetchNextPage","map","record","Name","get","Image","Username","Location","Favorites","split","forEach","m","push","done","err","console","log","initialState","Farmer1","Farmer2","Farmer3","farmerSlice","name","reducers","append","state","farmer","payload","update","username","i","length","actions","reducer"],"mappings":"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","sourcesContent":["import Airtable from 'airtable'\nimport { createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport type { RootState } from '../../app/store'\n\nimport type { Farmer } from './types';\nimport Images from './assets/Images';\n\n\nlet initialState1: Array<Farmer> = [\n];\n\nlet base = new Airtable({apiKey: process.env.AIRTABLE_API_KEY})\n  .base('appwPdl5QXUtRh8Rz');\nbase('Table 1').select({}).eachPage(\n  async function page(records, fetchNextPage) {\n    records.map(record => {\n      return {\n        Name: record.get('Name'),\n        Image: '',\n        Username: record.get('Username'),\n        Location: record.get('Location'),\n        Favorites: record.get('Favorites').split(',')\n      };\n    })\n    .forEach(m => initialState1.push(m));\n    fetchNextPage();\n  },\n  async function done(err) {\n    console.log(err);\n    console.log(initialState1);\n  });\n\nconst initialState: Array<Farmer> = [\n  {\n    Name: 'Yuki Sano',\n    Image: Images.Farmer1,\n    Username: 'yusano',\n    Location: 'Nagano', \n    Favorites: [ 'cabbage', 'spinach']\n  },\n  {\n    Name: 'Yuichiro Watanabe',\n    Image: Images.Farmer2,\n    Username: 'yuichinabe',\n    Location: 'Niigata',\n    Favorites: [ 'rice', 'pumpkin']\n  },\n  {\n    Name: 'Megumi Yamada',\n    Image: Images.Farmer3,\n    Username: 'watermelon',\n    Location: 'Yamagata',\n    Favorites: [ 'garlic', 'onion']\n  },\n];\n\nexport const farmerSlice = createSlice({\n  name: 'farmer',\n  initialState,\n  reducers: {\n    append: (state, farmer) => {\n      console.log(farmer);\n      state.push(farmer.payload);\n    },\n    update: (state, username, farmer) => {\n      for (var i =0; i < state.length; ++i) {\n        if (state[i].Username == username) {\n          state[i] = {\n            ...farmer,\n            ...state[i],\n          }\n        }\n      }\n    },\n  },\n});\n\nexport const { append, update } = farmerSlice.actions;\n\nexport default farmerSlice.reducer;\n"]},"metadata":{},"sourceType":"module"}