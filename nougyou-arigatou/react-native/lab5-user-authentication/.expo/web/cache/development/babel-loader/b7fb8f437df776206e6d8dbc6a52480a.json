{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Button from \"react-native-web/dist/exports/Button\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport { v4 as uuidv4 } from 'uuid';\nimport { append } from \"../commentSlice\";\nimport { Text, View } from \"../components/Themed\";\nexport default function ProfileScreen(_ref) {\n  var navigation = _ref.navigation,\n      route = _ref.route;\n\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      text = _useState2[0],\n      setText = _useState2[1];\n\n  var farmer = useSelector(function (state) {\n    return state.farmer;\n  }).filter(function (farmer) {\n    return farmer.Username == route.params.farmer;\n  })[0];\n  var comments = useSelector(function (state) {\n    return state.comment.comments;\n  }).filter(function (comment) {\n    return comment.Username == farmer.Username;\n  });\n  var dispatch = useDispatch();\n  return React.createElement(View, {\n    style: styles.container\n  }, React.createElement(View, {\n    style: styles.row\n  }, React.createElement(Image, {\n    style: styles.image,\n    source: farmer.Image\n  }), React.createElement(View, {\n    style: styles.column\n  }, React.createElement(View, {\n    style: styles.row\n  }, React.createElement(Text, null, \"Name: \"), React.createElement(Text, null, farmer.Name)), React.createElement(View, {\n    style: styles.row\n  }, React.createElement(Text, null, \"Location: \"), React.createElement(Text, null, farmer.Location)))), React.createElement(View, {\n    style: styles.row\n  }, React.createElement(TextInput, {\n    placeholder: \"Add a comment\",\n    onChangeText: function onChangeText(text) {\n      return setText(text);\n    },\n    defaultValue: text\n  }), React.createElement(Button, {\n    onPress: function onPress() {\n      dispatch(append({\n        Username: route.params.farmer.Username,\n        Content: text,\n        key: uuidv4()\n      }));\n    },\n    title: \"Submit\"\n  })), React.createElement(Text, null, \"Comments:\"), React.createElement(FlatList, {\n    data: comments,\n    renderItem: function renderItem(_ref2) {\n      var item = _ref2.item;\n      return React.createElement(View, null, React.createElement(Text, null, item.Content));\n    }\n  }));\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n    padding: 4\n  },\n  image: {\n    padding: 10,\n    height: 300,\n    width: 300\n  },\n  title: {\n    fontSize: 20,\n    fontWeight: 'bold'\n  },\n  separator: {\n    marginVertical: 30,\n    height: 1,\n    width: '80%'\n  },\n  column: {\n    flexDirection: 'column'\n  },\n  row: {\n    flexDirection: 'row'\n  }\n});","map":{"version":3,"sources":["/Users/fozziethebeat/devel/technovation-japan/nougyou-arigatou/react-native/final-version/screens/ProfileScreen.tsx"],"names":["React","useState","useDispatch","useSelector","v4","uuidv4","append","Text","View","ProfileScreen","navigation","route","text","setText","farmer","state","filter","Username","params","comments","comment","dispatch","styles","container","row","image","Image","column","Name","Location","Content","key","item","StyleSheet","create","flex","alignItems","justifyContent","padding","height","width","title","fontSize","fontWeight","separator","marginVertical","flexDirection"],"mappings":"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","sourcesContent":["import { StatusBar } from 'expo-status-bar';\nimport React, { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Button, FlatList, Image, Platform, StyleSheet, TextInput } from 'react-native';\nimport { v4 as uuidv4 } from 'uuid';\nimport { useNavigation } from '@react-navigation/native';\n\nimport { append } from '../commentSlice';\nimport EditScreenInfo from '../components/EditScreenInfo';\nimport { Text, View } from '../components/Themed';\n\nexport default function ProfileScreen({ navigation, route }) {\n  const [text, setText] = useState('');\n  const farmer = useSelector((state) => state.farmer)\n    .filter((farmer) => farmer.Username == route.params.farmer)[0];\n  const comments = useSelector((state) => state.comment.comments)\n    .filter(comment => comment.Username == farmer.Username);\n  const dispatch = useDispatch();\n\n  return (\n    <View style={styles.container}>\n      <View style={styles.row}>\n        <Image style={styles.image} source={farmer.Image} />\n        <View style={styles.column}>\n          <View style={styles.row}>\n            <Text>Name: </Text>\n            <Text>{farmer.Name}</Text>\n          </View>\n          <View style={styles.row}>\n            <Text>Location: </Text>\n            <Text>{farmer.Location}</Text>\n          </View>\n        </View>\n      </View>\n      <View style={styles.row}>\n        <TextInput\n          placeholder=\"Add a comment\"\n          onChangeText={text => setText(text)}\n          defaultValue={text}\n        />\n        <Button\n          onPress={() => { dispatch(append({\n            Username: route.params.farmer.Username,\n            Content: text,\n            key: uuidv4(),\n          })) }}\n          title=\"Submit\"\n        />\n      </View>\n\n      <Text>Comments:</Text>\n      <FlatList\n          data={comments}\n          renderItem={({item}) => (\n        <View>\n          <Text>{item.Content}</Text>\n        </View>\n          )}\n        />\n\n     </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n    padding: 4,\n  },\n  image: {\n    padding: 10,\n    height: 300,\n    width: 300,\n  },\n  title: {\n    fontSize: 20,\n    fontWeight: 'bold',\n  },\n  separator: {\n    marginVertical: 30,\n    height: 1,\n    width: '80%',\n  },\n  column: {\n    flexDirection: 'column',\n  },\n  row: {\n    flexDirection: 'row',\n  },\n});\n"]},"metadata":{},"sourceType":"module"}