{"ast":null,"code":"import { NavigationContainer } from '@react-navigation/native';\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport React, { useContext } from 'react';\nimport ThemeContext from \"../ThemeContext\";\nimport InitialScreen from \"../screens/InitialScreen\";\nimport LoginScreen from \"../screens/LoginScreen\";\nimport NewFarmerScreen from \"../screens/NewFarmerScreen\";\nimport NotFoundScreen from \"../screens/NotFoundScreen\";\nimport ProfileScreen from \"../screens/ProfileScreen\";\nimport FarmerProfileScreen from \"../screens/FarmerProfileScreen\";\nimport FarmerListScreen from \"../screens/FarmerListScreen\";\nimport LinkingConfiguration from \"./LinkingConfiguration\";\nexport default function Navigation(_ref) {\n  var colorScheme = _ref.colorScheme;\n  var theme = useContext(ThemeContext);\n  return React.createElement(NavigationContainer, {\n    linking: LinkingConfiguration,\n    theme: {\n      dark: false,\n      colors: theme.colors\n    }\n  }, React.createElement(RootNavigator, null));\n}\nvar Stack = createNativeStackNavigator();\n\nfunction RootNavigator() {\n  return React.createElement(Stack.Navigator, {\n    screenOptions: {\n      headerTitleAlign: 'center'\n    }\n  }, React.createElement(Stack.Screen, {\n    name: \"Initial\",\n    component: InitialScreen,\n    options: {\n      headerShown: true,\n      title: 'Who Are You?'\n    }\n  }), React.createElement(Stack.Screen, {\n    name: \"Login\",\n    component: LoginScreen,\n    options: {\n      headerShown: true,\n      title: 'Login'\n    }\n  }), React.createElement(Stack.Screen, {\n    name: \"New Farmer\",\n    component: NewFarmerScreen,\n    options: {\n      headerShown: true,\n      title: 'Signup'\n    }\n  }), React.createElement(Stack.Screen, {\n    name: \"Root\",\n    component: FarmerListScreen,\n    options: {\n      headerShown: true,\n      title: 'Farmers'\n    }\n  }), React.createElement(Stack.Screen, {\n    name: \"NotFound\",\n    component: NotFoundScreen,\n    options: {\n      title: 'Oops!'\n    }\n  }), React.createElement(Stack.Screen, {\n    name: \"Farmer Profile\",\n    component: FarmerProfileScreen,\n    options: function options(_ref2) {\n      var route = _ref2.route;\n      return {\n        headerShown: true,\n        title: route.params.name\n      };\n    }\n  }), React.createElement(Stack.Screen, {\n    name: \"Profile\",\n    component: ProfileScreen,\n    options: function options(_ref3) {\n      var route = _ref3.route;\n      return {\n        headerShown: true,\n        title: route.params.name\n      };\n    }\n  }));\n}","map":{"version":3,"sources":["/Users/fozziethebeat/devel/technovation-japan/nougyou-arigatou/react-native/final-version/navigation/index.tsx"],"names":["NavigationContainer","createNativeStackNavigator","React","useContext","ThemeContext","InitialScreen","LoginScreen","NewFarmerScreen","NotFoundScreen","ProfileScreen","FarmerProfileScreen","FarmerListScreen","LinkingConfiguration","Navigation","colorScheme","theme","dark","colors","Stack","RootNavigator","headerTitleAlign","headerShown","title","route","params","name"],"mappings":"AAKA,SAASA,mBAAT,QAA6D,0BAA7D;AACA,SAASC,0BAAT,QAA2C,gCAA3C;AACA,OAAOC,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AAGA,OAAOC,YAAP;AACA,OAAOC,aAAP;AACA,OAAOC,WAAP;AACA,OAAOC,eAAP;AACA,OAAOC,cAAP;AACA,OAAOC,aAAP;AACA,OAAOC,mBAAP;AACA,OAAOC,gBAAP;AAEA,OAAOC,oBAAP;AAEA,eAAe,SAASC,UAAT,OAAuE;AAAA,MAAjDC,WAAiD,QAAjDA,WAAiD;AACpF,MAAMC,KAAK,GAAGZ,UAAU,CAACC,YAAD,CAAxB;AACA,SACE,oBAAC,mBAAD;AACE,IAAA,OAAO,EAAEQ,oBADX;AAEE,IAAA,KAAK,EAAE;AACLI,MAAAA,IAAI,EAAE,KADD;AAELC,MAAAA,MAAM,EAAEF,KAAK,CAACE;AAFT;AAFT,KAME,oBAAC,aAAD,OANF,CADF;AAUD;AAMD,IAAMC,KAAK,GAAGjB,0BAA0B,EAAxC;;AAEA,SAASkB,aAAT,GAAyB;AACvB,SACE,oBAAC,KAAD,CAAO,SAAP;AAAiB,IAAA,aAAa,EAAE;AAACC,MAAAA,gBAAgB,EAAE;AAAnB;AAAhC,KACE,oBAAC,KAAD,CAAO,MAAP;AACE,IAAA,IAAI,EAAC,SADP;AAEE,IAAA,SAAS,EAAEf,aAFb;AAGE,IAAA,OAAO,EAAE;AAAEgB,MAAAA,WAAW,EAAE,IAAf;AAAqBC,MAAAA,KAAK,EAAE;AAA5B;AAHX,IADF,EAKE,oBAAC,KAAD,CAAO,MAAP;AACE,IAAA,IAAI,EAAC,OADP;AAEE,IAAA,SAAS,EAAEhB,WAFb;AAGE,IAAA,OAAO,EAAE;AAAEe,MAAAA,WAAW,EAAE,IAAf;AAAqBC,MAAAA,KAAK,EAAE;AAA5B;AAHX,IALF,EASE,oBAAC,KAAD,CAAO,MAAP;AACE,IAAA,IAAI,EAAC,YADP;AAEE,IAAA,SAAS,EAAEf,eAFb;AAGE,IAAA,OAAO,EAAE;AAAEc,MAAAA,WAAW,EAAE,IAAf;AAAqBC,MAAAA,KAAK,EAAE;AAA5B;AAHX,IATF,EAaE,oBAAC,KAAD,CAAO,MAAP;AACE,IAAA,IAAI,EAAC,MADP;AAEE,IAAA,SAAS,EAAEX,gBAFb;AAGE,IAAA,OAAO,EAAE;AAAEU,MAAAA,WAAW,EAAE,IAAf;AAAqBC,MAAAA,KAAK,EAAE;AAA5B;AAHX,IAbF,EAiBE,oBAAC,KAAD,CAAO,MAAP;AACE,IAAA,IAAI,EAAC,UADP;AAEE,IAAA,SAAS,EAAEd,cAFb;AAGE,IAAA,OAAO,EAAE;AAAEc,MAAAA,KAAK,EAAE;AAAT;AAHX,IAjBF,EAqBE,oBAAC,KAAD,CAAO,MAAP;AACE,IAAA,IAAI,EAAC,gBADP;AAEE,IAAA,SAAS,EAAEZ,mBAFb;AAGE,IAAA,OAAO,EAAG;AAAA,UAAGa,KAAH,SAAGA,KAAH;AAAA,aAAgB;AAAEF,QAAAA,WAAW,EAAE,IAAf;AAAqBC,QAAAA,KAAK,EAAEC,KAAK,CAACC,MAAN,CAAaC;AAAzC,OAAhB;AAAA;AAHZ,IArBF,EAyBE,oBAAC,KAAD,CAAO,MAAP;AACE,IAAA,IAAI,EAAC,SADP;AAEE,IAAA,SAAS,EAAEhB,aAFb;AAGE,IAAA,OAAO,EAAG;AAAA,UAAGc,KAAH,SAAGA,KAAH;AAAA,aAAgB;AAAEF,QAAAA,WAAW,EAAE,IAAf;AAAqBC,QAAAA,KAAK,EAAEC,KAAK,CAACC,MAAN,CAAaC;AAAzC,OAAhB;AAAA;AAHZ,IAzBF,CADF;AAgCD","sourcesContent":["/**\n * If you are not familiar with React Navigation, refer to the \"Fundamentals\" guide:\n * https://reactnavigation.org/docs/getting-started\n *\n */\nimport { NavigationContainer, DefaultTheme, DarkTheme } from '@react-navigation/native';\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport React, { useContext } from 'react';\nimport { ColorSchemeName } from 'react-native';\n\nimport ThemeContext from '../ThemeContext';\nimport InitialScreen from '../screens/InitialScreen';\nimport LoginScreen from '../screens/LoginScreen';\nimport NewFarmerScreen from '../screens/NewFarmerScreen';\nimport NotFoundScreen from '../screens/NotFoundScreen';\nimport ProfileScreen from '../screens/ProfileScreen';\nimport FarmerProfileScreen from '../screens/FarmerProfileScreen';\nimport FarmerListScreen from '../screens/FarmerListScreen';\nimport { RootStackParamList, RootTabParamList, RootTabScreenProps } from '../types';\nimport LinkingConfiguration from './LinkingConfiguration';\n\nexport default function Navigation({ colorScheme }: { colorScheme: ColorSchemeName }) {\n  const theme = useContext(ThemeContext);\n  return (\n    <NavigationContainer\n      linking={LinkingConfiguration}\n      theme={{\n        dark: false,\n        colors: theme.colors,\n      }}>\n      <RootNavigator />\n    </NavigationContainer>\n  );\n}\n\n/**\n * A root stack navigator is often used for displaying modals on top of all other content.\n * https://reactnavigation.org/docs/modal\n */\nconst Stack = createNativeStackNavigator<RootStackParamList>();\n\nfunction RootNavigator() {\n  return (\n    <Stack.Navigator screenOptions={{headerTitleAlign: 'center'}}>\n      <Stack.Screen\n        name=\"Initial\"\n        component={InitialScreen}\n        options={{ headerShown: true, title: 'Who Are You?' }} />\n      <Stack.Screen\n        name=\"Login\"\n        component={LoginScreen}\n        options={{ headerShown: true, title: 'Login' }} />\n      <Stack.Screen\n        name=\"New Farmer\"\n        component={NewFarmerScreen}\n        options={{ headerShown: true, title: 'Signup' }} />\n      <Stack.Screen\n        name=\"Root\"\n        component={FarmerListScreen}\n        options={{ headerShown: true, title: 'Farmers' }} />\n      <Stack.Screen\n        name=\"NotFound\"\n        component={NotFoundScreen}\n        options={{ title: 'Oops!' }} />\n      <Stack.Screen\n        name=\"Farmer Profile\"\n        component={FarmerProfileScreen}\n        options={ ({ route }) => ({ headerShown: true, title: route.params.name }) } />\n      <Stack.Screen\n        name=\"Profile\"\n        component={ProfileScreen}\n        options={ ({ route }) => ({ headerShown: true, title: route.params.name }) } />\n    </Stack.Navigator>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}