{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = FarmerProfileScreen;\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _regenerator = _interopRequireDefault(require(\"@babel/runtime/regenerator\"));\n\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _reactRedux = require(\"react-redux\");\n\nvar _Button = _interopRequireDefault(require(\"react-native-web/dist/exports/Button\"));\n\nvar _StyleSheet = _interopRequireDefault(require(\"react-native-web/dist/exports/StyleSheet\"));\n\nvar _TextInput = _interopRequireDefault(require(\"react-native-web/dist/exports/TextInput\"));\n\nvar ImagePicker = _interopRequireWildcard(require(\"expo-image-picker\"));\n\nvar _farmerSlice = require(\"../farmerSlice\");\n\nvar _Themed = require(\"../components/Themed\");\n\nvar _jsxFileName = \"/Users/fozziethebeat/devel/technovation-japan/nougyou-arigatou/react-native/final-version/screens/NewFarmerScreen.tsx\";\n\nfunction _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\nfunction _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nfunction FarmerProfileScreen(_ref) {\n  var navigation = _ref.navigation,\n      route = _ref.route;\n  var dispatch = (0, _reactRedux.useDispatch)();\n\n  var _useState = (0, _react.useState)({\n    Name: '',\n    Image: '',\n    Username: '',\n    Location: '',\n    Favorites: []\n  }),\n      _useState2 = (0, _slicedToArray2.default)(_useState, 2),\n      farmer = _useState2[0],\n      setFarmer = _useState2[1];\n\n  var onImagePress = function _callee() {\n    var result;\n    return _regenerator.default.async(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regenerator.default.awrap(ImagePicker.launchImageLibraryAsync({\n              mediaTypes: ImagePicker.MediaTypeOptions.All\n            }));\n\n          case 2:\n            result = _context.sent;\n            console.log(result);\n\n          case 4:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  return _react.default.createElement(_Themed.View, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 5\n    }\n  }, _react.default.createElement(_Themed.View, {\n    style: styles.row,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }\n  }, _react.default.createElement(_Themed.View, {\n    style: styles.column,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }\n  }, _react.default.createElement(_Themed.View, {\n    style: styles.row,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 11\n    }\n  }, _react.default.createElement(_Themed.Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }\n  }, \"Username: \"), _react.default.createElement(_TextInput.default, {\n    placeholder: \"new username\",\n    onChangeText: function onChangeText(text) {\n      return setFarmer((0, _extends2.default)({}, farmer, {\n        Username: text\n      }));\n    },\n    defaultValue: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }\n  })), _react.default.createElement(_Themed.View, {\n    style: styles.row,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 11\n    }\n  }, _react.default.createElement(_Themed.Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }\n  }, \"Name: \"), _react.default.createElement(_TextInput.default, {\n    placeholder: \"new name\",\n    onChangeText: function onChangeText(text) {\n      return setFarmer((0, _extends2.default)({}, farmer, {\n        Name: text\n      }));\n    },\n    defaultValue: farmer.Name,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }\n  })), _react.default.createElement(_Themed.View, {\n    style: styles.row,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 11\n    }\n  }, _react.default.createElement(_Themed.Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }\n  }, \"Location: \"), _react.default.createElement(_TextInput.default, {\n    placeholder: \"new location\",\n    onChangeText: function onChangeText(text) {\n      return setFarmer((0, _extends2.default)({}, farmer, {\n        Location: text\n      }));\n    },\n    defaultValue: farmer.Location,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }\n  })), _react.default.createElement(_Themed.View, {\n    style: styles.row,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 11\n    }\n  }, _react.default.createElement(_Themed.Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }\n  }, \"Favorites: \"), _react.default.createElement(_TextInput.default, {\n    placeholder: \"new favorites\",\n    onChangeText: function onChangeText(text) {\n      return setFarmer((0, _extends2.default)({}, farmer, {\n        Favorites: text.split(',').map(function (t) {\n          return t.trim();\n        })\n      }));\n    },\n    defaultValue: farmer.Favorites,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }\n  })), _react.default.createElement(_Themed.View, {\n    style: styles.row,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 11\n    }\n  }, _react.default.createElement(_Button.default, {\n    onPress: onImagePress,\n    title: \"Pick a photo\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }\n  })))), _react.default.createElement(_Themed.View, {\n    style: styles.row,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }\n  }, _react.default.createElement(_Button.default, {\n    onPress: function onPress() {\n      dispatch((0, _farmerSlice.append)(farmer));\n      navigation.navigate(\"Farmer Profile\", {\n        farmer: farmer.Username\n      });\n    },\n    title: \"Save\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 9\n    }\n  })));\n}\n\nvar styles = _StyleSheet.default.create({\n  container: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n    padding: 4\n  },\n  image: {\n    padding: 10,\n    height: 300,\n    width: 300\n  },\n  title: {\n    fontSize: 20,\n    fontWeight: 'bold'\n  },\n  separator: {\n    marginVertical: 30,\n    height: 1,\n    width: '80%'\n  },\n  column: {\n    flexDirection: 'column'\n  },\n  row: {\n    flexDirection: 'row'\n  }\n});","map":{"version":3,"sources":["/Users/fozziethebeat/devel/technovation-japan/nougyou-arigatou/react-native/final-version/screens/NewFarmerScreen.tsx"],"names":["FarmerProfileScreen","navigation","route","dispatch","Name","Image","Username","Location","Favorites","farmer","setFarmer","onImagePress","ImagePicker","launchImageLibraryAsync","mediaTypes","MediaTypeOptions","All","result","console","log","styles","container","row","column","text","split","map","t","trim","navigate","StyleSheet","create","flex","alignItems","justifyContent","padding","image","height","width","title","fontSize","fontWeight","separator","marginVertical","flexDirection"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Button, Image, StyleSheet, TextInput } from 'react-native';\nimport { useNavigation } from '@react-navigation/native';\nimport * as ImagePicker from 'expo-image-picker';\n\nimport { append } from '../farmerSlice';\nimport { Text, View } from '../components/Themed';\n\nexport default function FarmerProfileScreen({ navigation, route }) {\n  const dispatch = useDispatch();\n  const [farmer, setFarmer] = useState({\n    Name: '',\n    Image: '',\n    Username: '',\n    Location: '', \n    Favorites: [ ],\n  });\n\n  const onImagePress = async() => {\n    let result = await ImagePicker.launchImageLibraryAsync({\n      mediaTypes: ImagePicker.MediaTypeOptions.All,\n    });\n\n    console.log(result);\n  };\n\n  return (\n    <View style={styles.container}>\n      <View style={styles.row}>\n        <View style={styles.column}>\n          <View style={styles.row}>\n            <Text>Username: </Text>\n            <TextInput\n              placeholder=\"new username\"\n              onChangeText={text => setFarmer({\n                ...farmer,\n                Username: text\n              })}\n              defaultValue=''\n            />\n          </View>\n\n          <View style={styles.row}>\n            <Text>Name: </Text>\n            <TextInput\n              placeholder=\"new name\"\n              onChangeText={text => setFarmer({\n                ...farmer,\n                Name: text\n              })}\n              defaultValue={farmer.Name}\n            />\n          </View>\n\n          <View style={styles.row}>\n            <Text>Location: </Text>\n            <TextInput\n              placeholder=\"new location\"\n              onChangeText={text => setFarmer({\n                ...farmer,\n                Location: text\n              })}\n              defaultValue={farmer.Location}\n            />\n          </View>\n\n          <View style={styles.row}>\n            <Text>Favorites: </Text>\n            <TextInput\n              placeholder=\"new favorites\"\n              onChangeText={text => setFarmer({\n                ...farmer,\n                Favorites: text.split(',').map(t => t.trim())\n              })}\n              defaultValue={farmer.Favorites}\n            />\n          </View>\n          <View style={styles.row}>\n            <Button\n              onPress={onImagePress}\n              title=\"Pick a photo\"\n            />\n          </View>\n\n        </View>\n      </View>\n\n      <View style={styles.row}>\n        <Button\n          onPress={() => { \n            dispatch(append(farmer));\n            navigation.navigate(\"Farmer Profile\", { farmer: farmer.Username });\n          }}\n          title=\"Save\"\n        />\n      </View>\n     </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n    padding: 4,\n  },\n  image: {\n    padding: 10,\n    height: 300,\n    width: 300,\n  },\n  title: {\n    fontSize: 20,\n    fontWeight: 'bold',\n  },\n  separator: {\n    marginVertical: 30,\n    height: 1,\n    width: '80%',\n  },\n  column: {\n    flexDirection: 'column',\n  },\n  row: {\n    flexDirection: 'row',\n  },\n});\n\n"]},"metadata":{},"sourceType":"script"}