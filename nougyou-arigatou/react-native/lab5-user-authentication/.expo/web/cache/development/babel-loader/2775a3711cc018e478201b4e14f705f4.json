{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport Airtable from 'airtable';\nimport { StatusBar } from 'expo-status-bar';\nimport React from 'react';\nimport { Provider } from 'react-redux';\nimport { SafeAreaProvider } from 'react-native-safe-area-context';\nimport store from \"./Store\";\nimport useCachedResources from \"./hooks/useCachedResources\";\nimport useColorScheme from \"./hooks/useColorScheme\";\nimport Navigation from \"./navigation\";\n\nfunction readInitialState() {\n  var farmers, base;\n  return _regeneratorRuntime.async(function readInitialState$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          farmers = [];\n          base = new Airtable({\n            apiKey: process && process.env && process.env.AIRTABLE_API_KEY || \"keyOIGxfs3sOz7peI\"\n          }).base('appwPdl5QXUtRh8Rz');\n          _context2.next = 4;\n          return _regeneratorRuntime.awrap(base('Table 1').select({}).eachPage(function page(records, fetchNextPage) {\n            return _regeneratorRuntime.async(function page$(_context) {\n              while (1) {\n                switch (_context.prev = _context.next) {\n                  case 0:\n                    records.map(function (record) {\n                      return {\n                        Name: record.get('Name'),\n                        Image: '',\n                        Username: record.get('Username'),\n                        Location: record.get('Location'),\n                        Favorites: record.get('Favorites').split(',')\n                      };\n                    }).forEach(function (m) {\n                      return farmers.push(m);\n                    });\n                    fetchNextPage();\n\n                  case 2:\n                  case \"end\":\n                    return _context.stop();\n                }\n              }\n            }, null, null, null, Promise);\n          }).then(function (r) {\n            console.log(r);\n          }));\n\n        case 4:\n          return _context2.abrupt(\"return\", farmers);\n\n        case 5:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, null, null, null, Promise);\n}\n\nexport default function App() {\n  var isLoadingComplete = useCachedResources();\n  var colorScheme = useColorScheme();\n\n  if (!isLoadingComplete) {\n    return null;\n  }\n\n  return React.createElement(Provider, {\n    store: store\n  }, React.createElement(SafeAreaProvider, null, React.createElement(Navigation, {\n    colorScheme: colorScheme\n  }), React.createElement(StatusBar, null)));\n}","map":{"version":3,"sources":["/Users/fozziethebeat/devel/technovation-japan/nougyou-arigatou/react-native/final-version/App.tsx"],"names":["Airtable","StatusBar","React","Provider","SafeAreaProvider","store","useCachedResources","useColorScheme","Navigation","readInitialState","farmers","base","apiKey","select","eachPage","page","records","fetchNextPage","map","record","Name","get","Image","Username","Location","Favorites","split","forEach","m","push","then","r","console","log","App","isLoadingComplete","colorScheme"],"mappings":";AAAA,OAAOA,QAAP,MAAqB,UAArB;AACA,SAASC,SAAT,QAA0B,iBAA1B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAA0B,aAA1B;AACA,SAASC,gBAAT,QAAiC,gCAAjC;AAEA,OAAOC,KAAP;AACA,OAAOC,kBAAP;AACA,OAAOC,cAAP;AACA,OAAOC,UAAP;;AAEA,SAAeC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AACMC,UAAAA,OADN,GAC+B,EAD/B;AAGMC,UAAAA,IAHN,GAGa,IAAIX,QAAJ,CAAa;AAACY,YAAAA,MAAM;AAAP,WAAb,EACRD,IADQ,CACH,mBADG,CAHb;AAAA;AAAA,2CAKQA,IAAI,CAAC,SAAD,CAAJ,CAAgBE,MAAhB,CAAuB,EAAvB,EAA2BC,QAA3B,CACN,SAAeC,IAAf,CAAoBC,OAApB,EAA6BC,aAA7B;AAAA;AAAA;AAAA;AAAA;AACED,oBAAAA,OAAO,CAACE,GAAR,CAAY,UAAAC,MAAM,EAAI;AACpB,6BAAO;AACLC,wBAAAA,IAAI,EAAED,MAAM,CAACE,GAAP,CAAW,MAAX,CADD;AAELC,wBAAAA,KAAK,EAAE,EAFF;AAGLC,wBAAAA,QAAQ,EAAEJ,MAAM,CAACE,GAAP,CAAW,UAAX,CAHL;AAILG,wBAAAA,QAAQ,EAAEL,MAAM,CAACE,GAAP,CAAW,UAAX,CAJL;AAKLI,wBAAAA,SAAS,EAAEN,MAAM,CAACE,GAAP,CAAW,WAAX,EAAwBK,KAAxB,CAA8B,GAA9B;AALN,uBAAP;AAOD,qBARD,EASCC,OATD,CASS,UAAAC,CAAC;AAAA,6BAAIlB,OAAO,CAACmB,IAAR,CAAaD,CAAb,CAAJ;AAAA,qBATV;AAUAX,oBAAAA,aAAa;;AAXf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WADM,EAcLa,IAdK,CAcA,UAAAC,CAAC,EAAI;AAACC,YAAAA,OAAO,CAACC,GAAR,CAAYF,CAAZ;AAAe,WAdrB,CALR;;AAAA;AAAA,4CAoBSrB,OApBT;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAwBA,eAAe,SAASwB,GAAT,GAAe;AAC5B,MAAMC,iBAAiB,GAAG7B,kBAAkB,EAA5C;AACA,MAAM8B,WAAW,GAAG7B,cAAc,EAAlC;;AAEA,MAAI,CAAC4B,iBAAL,EAAwB;AACtB,WAAO,IAAP;AACD;;AACD,SACE,oBAAC,QAAD;AAAU,IAAA,KAAK,EAAE9B;AAAjB,KACE,oBAAC,gBAAD,QACE,oBAAC,UAAD;AAAY,IAAA,WAAW,EAAE+B;AAAzB,IADF,EAEE,oBAAC,SAAD,OAFF,CADF,CADF;AAQD","sourcesContent":["import Airtable from 'airtable'\nimport { StatusBar } from 'expo-status-bar';\nimport React from 'react';\nimport { Provider }  from 'react-redux';\nimport { SafeAreaProvider } from 'react-native-safe-area-context';\n\nimport store from \"./Store\";\nimport useCachedResources from './hooks/useCachedResources';\nimport useColorScheme from './hooks/useColorScheme';\nimport Navigation from './navigation';\n\nasync function readInitialState() {\n  let farmers: Array<Farmer> = [];\n\n  let base = new Airtable({apiKey: process.env.AIRTABLE_API_KEY})\n    .base('appwPdl5QXUtRh8Rz');\n  await base('Table 1').select({}).eachPage(\n  async function page(records, fetchNextPage) {\n    records.map(record => {\n      return {\n        Name: record.get('Name'),\n        Image: '',\n        Username: record.get('Username'),\n        Location: record.get('Location'),\n        Favorites: record.get('Favorites').split(',')\n      };\n    })\n    .forEach(m => farmers.push(m));\n    fetchNextPage();\n  })\n  .then(r => {console.log(r)});\n  return farmers;\n}\n\n\nexport default function App() {\n  const isLoadingComplete = useCachedResources();\n  const colorScheme = useColorScheme();\n\n  if (!isLoadingComplete) {\n    return null;\n  }\n  return (\n    <Provider store={store}>\n      <SafeAreaProvider>\n        <Navigation colorScheme={colorScheme} />\n        <StatusBar />\n      </SafeAreaProvider>\n    </Provider>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}