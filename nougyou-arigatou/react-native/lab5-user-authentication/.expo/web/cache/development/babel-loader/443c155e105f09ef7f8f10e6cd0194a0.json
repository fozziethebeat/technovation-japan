{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = useCachedResources;\n\nvar _regenerator = _interopRequireDefault(require(\"@babel/runtime/regenerator\"));\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));\n\nvar _vectorIcons = require(\"@expo/vector-icons\");\n\nvar Font = _interopRequireWildcard(require(\"expo-font\"));\n\nvar SplashScreen = _interopRequireWildcard(require(\"expo-splash-screen\"));\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nfunction _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\nfunction _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nfunction useCachedResources() {\n  var _React$useState = React.useState(false),\n      _React$useState2 = (0, _slicedToArray2.default)(_React$useState, 2),\n      isLoadingComplete = _React$useState2[0],\n      setLoadingComplete = _React$useState2[1];\n\n  React.useEffect(function () {\n    function loadResourcesAndDataAsync() {\n      return _regenerator.default.async(function loadResourcesAndDataAsync$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              SplashScreen.preventAutoHideAsync();\n              _context.next = 4;\n              return _regenerator.default.awrap(Font.loadAsync((0, _extends2.default)({}, _vectorIcons.FontAwesome.font, {\n                'space-mono': require(\"../assets/fonts/SpaceMono-Regular.ttf\")\n              })));\n\n            case 4:\n              _context.next = 9;\n              break;\n\n            case 6:\n              _context.prev = 6;\n              _context.t0 = _context[\"catch\"](0);\n              console.warn(_context.t0);\n\n            case 9:\n              _context.prev = 9;\n              setLoadingComplete(true);\n              SplashScreen.hideAsync();\n              return _context.finish(9);\n\n            case 13:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, [[0, 6, 9, 13]], Promise);\n    }\n\n    loadResourcesAndDataAsync();\n  }, []);\n  return isLoadingComplete;\n}","map":{"version":3,"sources":["/Users/fozziethebeat/devel/technovation-japan/nougyou-arigatou/react-native/final-version/hooks/useCachedResources.ts"],"names":["useCachedResources","React","useState","isLoadingComplete","setLoadingComplete","useEffect","loadResourcesAndDataAsync","SplashScreen","preventAutoHideAsync","Font","loadAsync","FontAwesome","font","require","console","warn","hideAsync"],"mappings":";;;;;;;;;;;;;AAAA;;AACA;;AACA;;AACA;;;;;;AAEe,SAASA,kBAAT,GAA8B;AAC3C,wBAAgDC,KAAK,CAACC,QAAN,CAAe,KAAf,CAAhD;AAAA;AAAA,MAAOC,iBAAP;AAAA,MAA0BC,kBAA1B;;AAGAH,EAAAA,KAAK,CAACI,SAAN,CAAgB,YAAM;AACpB,aAAeC,yBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAEIC,cAAAA,YAAY,CAACC,oBAAb;AAFJ;AAAA,gDAKUC,IAAI,CAACC,SAAL,4BACDC,yBAAYC,IADX;AAEJ,8BAAcC,OAAO;AAFjB,iBALV;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAWIC,cAAAA,OAAO,CAACC,IAAR;;AAXJ;AAAA;AAaIX,cAAAA,kBAAkB,CAAC,IAAD,CAAlB;AACAG,cAAAA,YAAY,CAACS,SAAb;AAdJ;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAkBAV,IAAAA,yBAAyB;AAC1B,GApBD,EAoBG,EApBH;AAsBA,SAAOH,iBAAP;AACD","sourcesContent":["import { FontAwesome } from '@expo/vector-icons';\nimport * as Font from 'expo-font';\nimport * as SplashScreen from 'expo-splash-screen';\nimport * as React from 'react';\n\nexport default function useCachedResources() {\n  const [isLoadingComplete, setLoadingComplete] = React.useState(false);\n\n  // Load any resources or data that we need prior to rendering the app\n  React.useEffect(() => {\n    async function loadResourcesAndDataAsync() {\n      try {\n        SplashScreen.preventAutoHideAsync();\n\n        // Load fonts\n        await Font.loadAsync({\n          ...FontAwesome.font,\n          'space-mono': require('../assets/fonts/SpaceMono-Regular.ttf'),\n        });\n      } catch (e) {\n        // We might want to provide this error information to an error reporting service\n        console.warn(e);\n      } finally {\n        setLoadingComplete(true);\n        SplashScreen.hideAsync();\n      }\n    }\n\n    loadResourcesAndDataAsync();\n  }, []);\n\n  return isLoadingComplete;\n}\n"]},"metadata":{},"sourceType":"script"}