{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nimport base from \"./Datastore\";\nvar initialState = [];\nexport var commentSlice = createSlice({\n  name: 'comment',\n  initialState: initialState,\n  reducers: {\n    init: function init(state, comment) {\n      state.push(comment.payload);\n    },\n    append: function append(state, content) {\n      var comment = content.payload;\n      base('Comments').create([{\n        \"fields\": {\n          \"Farmer\": comment.Username,\n          \"Comment\": comment.Content,\n          \"uuid\": comment.key\n        }\n      }], function (err) {\n        state.push(content.payload);\n      });\n    }\n  }\n});\nvar _commentSlice$actions = commentSlice.actions,\n    init = _commentSlice$actions.init,\n    append = _commentSlice$actions.append;\nexport { init, append };\nexport default commentSlice.reducer;","map":{"version":3,"sources":["/Users/fozziethebeat/devel/technovation-japan/nougyou-arigatou/react-native/final-version/commentSlice.ts"],"names":["createSlice","base","initialState","commentSlice","name","reducers","init","state","comment","push","payload","append","content","create","Username","Content","key","err","actions","reducer"],"mappings":"AAAA,SAASA,WAAT,QAA2C,kBAA3C;AAGA,OAAOC,IAAP;AAIA,IAAMC,YAA4B,GAAG,EAArC;AAEA,OAAO,IAAMC,YAAY,GAAGH,WAAW,CAAC;AACtCI,EAAAA,IAAI,EAAE,SADgC;AAEtCF,EAAAA,YAAY,EAAZA,YAFsC;AAGtCG,EAAAA,QAAQ,EAAE;AACRC,IAAAA,IAAI,EAAE,cAACC,KAAD,EAAQC,OAAR,EAAoB;AACxBD,MAAAA,KAAK,CAACE,IAAN,CAAWD,OAAO,CAACE,OAAnB;AACD,KAHO;AAIRC,IAAAA,MAAM,EAAE,gBAACJ,KAAD,EAAQK,OAAR,EAAoB;AAC1B,UAAMJ,OAAO,GAAGI,OAAO,CAACF,OAAxB;AACAT,MAAAA,IAAI,CAAC,UAAD,CAAJ,CAAiBY,MAAjB,CAAwB,CACtB;AACE,kBAAU;AACR,oBAAUL,OAAO,CAACM,QADV;AAER,qBAAWN,OAAO,CAACO,OAFX;AAGR,kBAAQP,OAAO,CAACQ;AAHR;AADZ,OADsB,CAAxB,EAQE,UAASC,GAAT,EAAc;AACZV,QAAAA,KAAK,CAACE,IAAN,CAAWG,OAAO,CAACF,OAAnB;AACD,OAVH;AAWD;AAjBO;AAH4B,CAAD,CAAhC;AAwBA,4BAAyBP,YAAY,CAACe,OAAtC;AAAA,IAAQZ,IAAR,yBAAQA,IAAR;AAAA,IAAcK,MAAd,yBAAcA,MAAd;;AAEP,eAAeR,YAAY,CAACgB,OAA5B","sourcesContent":["import { createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport type { RootState } from '../../app/store'\n\nimport base from './Datastore';\nimport type { Comment } from './types';\n\n\nconst initialState: Array<Comment> = [];\n\nexport const commentSlice = createSlice({\n  name: 'comment',\n  initialState,\n  reducers: {\n    init: (state, comment) => {\n      state.push(comment.payload);\n    },\n    append: (state, content) => {\n      const comment = content.payload;\n      base('Comments').create([\n        {\n          \"fields\": {\n            \"Farmer\": comment.Username,\n            \"Comment\": comment.Content,\n            \"uuid\": comment.key\n          }\n        }],\n        function(err) {\n          state.push(content.payload);\n        });\n    },\n  },\n});\n\nexport const { init, append } = commentSlice.actions;\n\nexport default commentSlice.reducer;\n"]},"metadata":{},"sourceType":"module"}